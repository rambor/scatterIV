package version4.ConvolutionFunctions;

import org.jfree.util.BooleanUtilities;
import org.junit.Assert;
import org.junit.Test;

import static org.junit.Assert.*;

public class ExponentiallyModifiedGaussianTest {


    @Test
    public void calculate() {
        int kernel_width = 101;
        double[] checkit = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.339191437157275E-15, 3.3601805659489856E-14, 4.0038466512536915E-13, 4.260680740337124E-12, 4.035174545205082E-11, 3.401221051336643E-10, 2.5520994462960206E-9, 1.7051679577128304E-8, 1.0147946055425537E-7, 5.381298550846177E-7, 2.5437654296579497E-6, 1.0724169567341923E-5, 4.034619975657065E-5, 1.3555000181844187E-4, 4.070262433733286E-4, 0.0010934985821852688, 0.0026316868366665206, 0.005682585423491224, 0.011030475273380993, 0.019294457467076684, 0.03050625466807096, 0.04376653083541381, 0.05725506443770323, 0.06871775547395062, 0.07624431468297674, 0.07892531625402323, 0.07704220265606698, 0.07175224895444421, 0.0645244397588672, 0.056649775864005485, 0.04900316008870493, 0.042041663589573355, 0.03592378289869949, 0.030642443492289693, 0.026120028211750888, 0.02226002707205531, 0.01896917736276981, 0.016164549904710515, 0.013774535005278756, 0.011737886604620907, 0.010002367456060705, 0.008523455337423217, 0.007263209530019573, 0.006189298889316818, 0.0052741726066162665, 0.004494353428665987, 0.0038298353596568644, 0.003263570414494781, 0.002781031258565612, 0.0023698385139075714, 0.002019443170479253, 0.0017208559548941309, 0.001466416713668552, 0.0012495978945888998, 0.0010648370845791851, 9.073943078850408E-4, 7.732304236075315E-4, 6.589035029168704E-4, 5.614805275386915E-4, 4.7846214416756767E-4, 4.0771854440784866E-4, 3.474348252634926E-4, 2.9606442841884615E-4, 2.522894638109512E-4, 2.1498689960811792E-4, 1.8319975121016007E-4, 1.5611253013389305E-4, 1.3303032293339746E-4, 1.1336096343186398E-4, 9.659984089968868E-5, 8.231695443779395E-5, 7.014588145078072E-5, 5.977437719984296E-5, 5.093636427016969E-5, 4.3405106445345534E-5, 3.698739186681846E-5, 3.151857624936871E-5, 2.6858358987957487E-5, 2.2887183793412787E-5, 1.9503171516484835E-5, 1.6619506472915302E-5, 1.416220921657852E-5, 1.2068238621947418E-5, 1.028387458545464E-5, 8.76333985450264E-6, 7.467625627614488E-6, 6.3634907968965905E-6, 5.422609158719075E-6, 4.620842714593752E-6, 3.937622419030832E-6};

        ExponentiallyModifiedGaussian emg = new ExponentiallyModifiedGaussian(kernel_width);

        emg.calculate(2.9, 0.16, 33.0);
        double[] values = emg.getConvolutionFunction();
        double sum=0.0d;

        for(int i=1; i<(kernel_width-1); i++){
            sum += values[i];
        }

        sum += 0.5*(values[0] + values[kernel_width-1]);
        Assert.assertEquals("Should equal one", 1.0d, sum, 0.1);
    }
}